Table users {
    id uuid [pk]
    email varchar [not null, unique]
    password_hash varchar
    oauth_provider varchar
    oauth_id varchar [unique]
    created_at timestamp [default: `now()`]
    updated_at timestamp [default: `now()`]
    deleted_at timestamp
}

Table tokens {
    id int [pk, increment]
    user_id uuid [ref: > users.id, not null]
    token varchar [not null]
    expires_at timestamp [not null]
    is_revoked boolean [default: false]
    created_at timestamp [default: `now()`]
    updated_at timestamp
}

Table offices {
    id uuid [pk]
    office_name varchar [not null]
    office_type varchar [not null]
    address text [not null]
    created_at timestamp [default: `now()`]
    updated_at timestamp
}

Table employees {
    id uuid [pk]
    employee_code varchar [not null, unique]
    first_name varchar [not null]
    last_name varchar [not null]
    job_title varchar [not null]
    user_id uuid [ref: > users.id, unique]
    office_id uuid [ref: > offices.id, not null]
    created_at timestamp [default: `now()`]
    updated_at timestamp
    deleted_at timestamp
}

Table customers {
    id uuid [pk]
    first_name varchar [not null]
    last_name varchar [not null]
    phone_number varchar
    email varchar [unique]
    address text
    created_at timestamp [default: `now()`]
    updated_at timestamp
    deleted_at timestamp
}

Table vehicle_models {
    id uuid [pk]
    brand varchar [not null]
    model_name varchar [not null]
    year int [not null]
    created_at timestamp [default: `now()`]
    updated_at timestamp

    indexes {
        (brand, model_name, year) [unique]
    }
}

Table vehicles {
    id uuid [pk]
    vin varchar [not null, unique]
    license_plate varchar
    customer_id uuid [ref: > customers.id]
    model_id uuid [ref: > vehicle_models.id]
    warrant_policy_id uuid [ref: > warranty_policies.id]
    purchase_date date
    created_at timestamp [default: `now()`]
    updated_at timestamp
}

Table part_categories {
    id uuid [pk]
    category_name varchar [not null, unique]
    description text
    parent_category_id uuid [ref: > part_categories.id]
    created_at timestamp [default: `now()`]
    updated_at timestamp
}

Table parts {
    id uuid [pk]
    serial_number varchar [not null, unique]
    part_name varchar [not null]
    unit_price decimal(10,2) [not null]
    category_id uuid [ref: > part_categories.id, not null]
    office_location_id uuid [ref: > offices.id]
    inventory_status varchar [default: 'available'] // available, reserved
}

Table warranty_policies {
    id uuid [pk]
    policy_name varchar [not null]
    model_id uuid [ref: > vehicle_models.id, not null]
    warranty_duration_months int [not null]
    kilometer_limit int
    terms_and_conditions text [not null]
    created_at timestamp [default: `now()`]
    updated_at timestamp
}

Table policy_covered_parts {
    id int [pk, increment]
    policy_id uuid [ref: > warranty_policies.id, not null]
    part_category_id int [ref: > part_categories.id, not null]
    coverage_conditions text
    created_at timestamp [default: `now()`]
    updated_at timestamp

    indexes {
        (policy_id, part_category_id) [unique]
    }
}

Table warranty_claims {
    id uuid [pk]
    vehicle_id uuid [ref: > vehicles.id, not null]
    customer_id uuid [ref: > customers.id, not null]
    claim_date date [not null]
    claim_description text [not null]
    claim_status varchar [default: 'draft']
    total_cost decimal(10,2)
    approved_by uuid [ref: > employees.id]
    created_at timestamp [default: `now()`]
    updated_at timestamp
}

Table claim_attachments {
    id int [pk, increment]
    warranty_claim_id uuid [ref: > warranty_claims.id, not null]
    type varchar
    extension varchar
    url text
}

Table claim_status_history {
    id int [pk, increment]
    claim_id uuid [ref: > warranty_claims.id, not null]
    status varchar
    status_reason text
    changed_by uuid [ref: > employees.id, not null]
    changed_at timestamp [default: `now()`]
}

Table claim_line_items {
    id int [pk, increment]
    claim_id uuid [ref: > warranty_claims.id, not null]
    part_category_id int [ref: > part_categories.id, not null]
    faulty_part_id uuid [ref: > parts.id]
    replacement_part_id uuid [ref: > parts.id]
    issue_description text [not null]
    part_cost decimal(10,2) [default: 0.00]
    line_status varchar [default: 'pending'] // pending, approved, rejected
    created_at timestamp [default: `now()`]
    updated_at timestamp
}

Table work_orders {
    id uuid [pk]
    claim_id uuid [ref: > warranty_claims.id, not null]
    assigned_technician_id uuid [ref: > employees.id, not null]
    work_order_status varchar [default: 'assigned'] // assigned, in_progress, completed
    scheduled_date date
    completed_date date
    created_at timestamp [default: `now()`]
    updated_at timestamp
}

Table work_order_tasks {
    id int [pk, increment]
    work_order_id uuid [ref: > work_orders.id, not null]
    task_type varchar
    task_status varchar [default: 'pending'] // pending, in_progress, completed
    started_at timestamp
    completed_at timestamp
    notes text
    created_at timestamp [default: `now()`]
    updated_at timestamp
}

User & Identity Service: users, tokens, employees, offices
Đăng ký/đăng nhập (email, OAuth).
Quản lý tài khoản nhân viên, vai trò, phân quyền.
Quản lý office/branch (service center, hãng…).
JWT/OAuth2 token issuance, refresh, revoke.

Customer & Vehicle service: customers, vehicle_models, vehicles, warranty_policies, policy_covered_parts
Quản lý thông tin khách hàng, xe (VIN, biển số, model).
Liên kết xe với khách hàng & policy bảo hành.
Quản lý chính sách bảo hành (thời hạn, km limit, điều kiện).
Gắn policy với part category (những bộ phận nào được bảo hành).

Parts & Inventory service: part_categories, parts
Quản lý danh mục phụ tùng (pin, motor, inverter, BMS…).
Theo dõi serial number, tình trạng (available, reserved).
Quản lý tồn kho, cảnh báo thiếu hụt.
Hỗ trợ phân bổ phụ tùng cho claim/work order.

Warranty claim service: warranty_claims, claim_attachments, claim_status_history, claim_line_items
SC Staff/Technician tạo claim → gửi lên hãng.
Đính kèm tài liệu (ảnh, báo cáo kiểm tra, chẩn đoán).
Theo dõi trạng thái claim (draft → submitted → approved/rejected).
Lưu lịch sử thay đổi trạng thái.
Tính toán chi phí bảo hành.
Liên kết với phụ tùng trong claim line items.

Work order & service execution service: work_orders, work_order_tasks
Nhận claim đã được approve để tạo work order.
Phân công kỹ thuật viên.
Theo dõi tiến độ sửa chữa (assigned → in_progress → completed).
Quản lý các task cụ thể trong work order.
Cập nhật kết quả, bàn giao xe, gửi báo cáo về hãng.
