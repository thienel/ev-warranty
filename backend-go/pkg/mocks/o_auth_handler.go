// Code generated by mockery v2.53.5. DO NOT EDIT.

package mocks

import (
	gin "github.com/gin-gonic/gin"

	mock "github.com/stretchr/testify/mock"
)

// OAuthHandler is an autogenerated mock type for the OAuthHandler type
type OAuthHandler struct {
	mock.Mock
}

// HandleCallback provides a mock function with given fields: c
func (_m *OAuthHandler) HandleCallback(c *gin.Context) {
	_m.Called(c)
}

// InitiateOAuth provides a mock function with given fields: c
func (_m *OAuthHandler) InitiateOAuth(c *gin.Context) {
	_m.Called(c)
}

// NewOAuthHandler creates a new instance of OAuthHandler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewOAuthHandler(t interface {
	mock.TestingT
	Cleanup(func())
}) *OAuthHandler {
	mock := &OAuthHandler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
