name: CI Pipeline

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    env:
      GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
      GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
      PUBLIC_PEM: ${{ secrets.PUBLIC_PEM }}
      PRIVATE_PEM: ${{ secrets.PRIVATE_PEM }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # ---------- Frontend ----------
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Build frontend
        run: make frontend-build

      # ---------- Go ----------
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24

      - name: Build Go service
        run: make go-build

      - name: Run Go tests
        run: make go-test

      # ---------- .NET ----------
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Restore .NET dependencies
        run: make dotnet-restore

      - name: Build .NET service
        run: make dotnet-build

      - name: Run .NET tests
        run: make dotnet-test

      # ---------- Docker Compose ----------
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker Compose down (cleanup)
        run: make docker-compose-down

      - name: Docker Compose up
        run: make docker-compose-up

      # ---------- Migration ----------
      - name: Run DB migrations
        run: make db-migrate-up

      # ---------- Healthcheck ----------
      - name: Check services health
        run: |
          sleep 10
          curl -f http://localhost/health || exit 1
          curl -f http://localhost/api/v1/auth/ || echo "Auth endpoint checked"
          curl -f http://localhost/api/v1/offices/ || echo "Offices endpoint checked"
