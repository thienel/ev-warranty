name: CD Pipeline

on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      backend-go: ${{ steps.filter.outputs.backend-go }}
      backend-dotnet: ${{ steps.filter.outputs.backend-dotnet }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            backend-go:
              - 'backend-go/**'
            backend-dotnet:
              - 'backend-dotnet/**'

  build-backend-go:
    needs: detect-changes
    if: needs.detect-changes.outputs.backend-go == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Generate version
        id: version
        run: echo "VERSION=$(date +%Y%m%d)-${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: Build & Push Go Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./backend-go
          push: true
          tags: |
            lethiendev/ev-warranty-go:latest
            lethiendev/ev-warranty-go:${{ steps.version.outputs.VERSION }}
          cache-from: type=registry,ref=lethiendev/ev-warranty-go:buildcache
          cache-to: type=registry,ref=lethiendev/ev-warranty-go:buildcache,mode=max

  build-backend-dotnet:
    needs: detect-changes
    if: needs.detect-changes.outputs.backend-dotnet == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Generate version
        id: version
        run: echo "VERSION=$(date +%Y%m%d)-${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: Build & Push .NET Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./backend-dotnet
          push: true
          tags: |
            lethiendev/ev-warranty-dotnet:latest
            lethiendev/ev-warranty-dotnet:${{ steps.version.outputs.VERSION }}
          cache-from: type=registry,ref=lethiendev/ev-warranty-dotnet:buildcache
          cache-to: type=registry,ref=lethiendev/ev-warranty-dotnet:buildcache,mode=max